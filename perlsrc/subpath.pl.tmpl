#! /usr/bin/env perl -w

use strict;
use Getopt::Long;

my ($logo)="subpath";

sub Usage($$)
{
	my ($ec,$fmt)=@_;
	my ($fp)=\*STDERR;

	if ($ec == 0) {
		$fp =\*STDOUT;
	}

	if (length($fmt) > 0) {
		print $fp "$fmt\n";
	}

	print $fp "$0 [OPTIONS] basepath [dirs]...\n";
	print $fp "[OPTIONS]\n";
	print $fp "\t-h|--help               to give this help information\n";
	print $fp "\t-v|--verbose            to make verbose mode\n";
	print $fp "\n";
	print $fp "\t[dirs]                  to make subpath ok\n";

	exit($ec);
}

%COMMON_PL_CODE%

my %opts=();

Getopt::Long::Configure("no_ignorecase","bundling");
Getopt::Long::GetOptions(\%opts,"help|h",
	"verbose|v" => sub {
		if (!defined($opts{"verbose"})) {
			$opts{"verbose"} = 0;
		}
		$opts{"verbose"}++;
	},
	"topdir|t=s");

if (defined($opts{"help"})) {
	Usage(0,"");
}

if (defined($opts{"verbose"})) {
	$verbose = $opts{"verbose"};
}

my ($basepath)="";

if (scalar(@ARGV) > 0) {
	$basepath=shift @ARGV;
}
if ( -e "$basepath" ) {
	$basepath = abs_path($basepath);
}
while(<STDIN>){
	my ($l)=$_;
	my ($subpath)="";
	chomp($l);
	if ( -e "$l") { 
		$l = abs_path($l);
	}
	$subpath = $l;
	$subpath =~ s/$basepath//;
	Debug("basepath[$basepath] l[$l] subpath[$subpath]");
	if (length($subpath) == 0) {
		$subpath = ".";
	} 
	while(substr($subpath,0,1) eq "/") {
		$subpath =~ s/\///;
	}
	print "$subpath\n";
}