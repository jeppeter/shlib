#! /bin/bash

INSERTCODE_INFO_LEVEL=2
INSERTCODE_DEBUG_LEVEL=3
INSERTCODE_WARN_LEVEL=1
INSERTCODE_ERROR_LEVEL=0

_insertcode_debug()
{
	local _fmt="$1"
	shift
	local _backstack=0
	local _osname=`uname -s | tr [:upper:] [:lower:]`
	if [ $# -gt 0 ]
		then
		_backstack="$1"
	fi
	if [ -n "$INSERTCODE_DEBUG" ] && [ $INSERTCODE_DEBUG -gt 0 ]
		then
        
        _fmtstr=""
        if [ $INSERTCODE_DEBUG -gt $INSERTCODE_INFO_LEVEL ]
                then
                local _funcstack=`expr $_backstack \+ 1`
                if [ "${BASH_VERSINFO[0]}" -lt 4 ]
                        then
                        local _filestack=$_backstack
                        _fmtstr="[$_osname]${FUNCNAME[$_funcstack]}:${BASH_LINENO[$_backstack]} "
                else
                        _fmtstr="[$_osname]${FUNCNAME[$_funcstack]}:${BASH_LINENO[$_backstack]} "
                fi
                #echo "BASH_SOURCE [${BASH_SOURCE[@]}] BASH_LINENO [${BASH_LINENO[@]}] FUNCNAME [${FUNCNAME[@]}]" >&2
        fi 
        _fmtstr="$_fmtstr$_fmt"
        if [ "$_osname" = "darwin" ]
                then
                echo "$_fmtstr" >&2
        else
                echo -e "$_fmtstr" >&2
        fi
	fi
}

_insertcode_get_cmdname_needargs_longopt()
{
	local _cmdname="$1"
	if [ -z "$_cmdname" ]
		then
		echo "--input"
		echo "--output"
		echo "--pattern"
	elif [ "$_cmdname" = "bashinsert" ]
		then
		echo "--input"
		echo "--output"
		echo "--pattern"
	elif [ "$_cmdname"  = "bashstring" ]
		then
		echo "--input"
		echo "--output"
		echo "--pattern"
	elif [ "$_cmdname" = "makepython" ]
		then
		echo "--input"
		echo "--output"
		echo "--pattern"
	elif [ "$_cmdname" = "makeperl" ]
		then
		echo "--input"
		echo "--output"
		echo "--pattern"
	fi

	return
}

_insertcode_get_cmdname_noargs_longopt()
{
	local _cmdname="$1"
	if [ -z "$_cmdname" ]
		then
		echo "--verbose"
	elif [ "$_cmdname" = "bashinsert" ]
		then
		echo "--verbose"
	elif [ "$_cmdname"  = "bashstring" ]
		then
		echo "--verbose"
	elif [ "$_cmdname" = "makepython" ]
		then
		echo "--verbose"
	elif [ "$_cmdname" = "makeperl" ]
		then
		echo "--verbose"
	fi

	return
}

_insertcode_get_cmdname_noargs_shortopt()
{
	local _cmdname="$1"
	if [ -z "$_cmdname" ]
		then
		echo "v"
	elif [ "$_cmdname" = "bashinsert" ]
		then
		echo "v"
	elif [ "$_cmdname" = "bashstring" ]
		then
		echo "v"
	elif [ "$_cmdname" = "makepython" ]
		then
		echo "v"
	elif [ "$_cmdname" = "makeperl" ]
		then
		echo "v"
	fi
	return
}


_insertcode_get_cmdname_needargs_shortopt()
{
	local _cmdname="$1"
	if [ -z "$_cmdname" ]
		then
		echo "i"
		echo "o"
		echo "p"
	elif [ "$_cmdname" = "bashinsert" ]
		then
		echo "i"
		echo "o"
		echo "p"
	elif [ "$_cmdname" = "bashstring" ]
		then
		echo "i"
		echo "o"
		echo "p"
	elif [ "$_cmdname" = "makepython" ]
		then
		echo "i"
		echo "o"
		echo "p"
	elif [ "$_cmdname" = "makeperl" ]
		then
		echo "i"
		echo "o"
		echo "p"
	fi
	return
}

_insertcode_longopt_step()
{
	local _cmdname="$1"
	local _longopt="$2"
	local _curopt

	for _curopt in $(_insertcode_get_cmdname_needargs_longopt "$_cmdname")
	do
		if [ "$_curopt" = "$_longopt" ]
			then
			echo "1"
			return
		fi
	done

	for _curopt in $(_insertcode_get_cmdname_noargs_longopt "$_cmdname")
	do
		if [ "$_curopt" = "$_longopt" ]
			then
			echo "0"
			return
		fi
	done
	echo "-1"
	return
}

_insertcode_shortopt_step()
{
	local _cmdname="$1"
	local _shortopt="$2"
	local _curopt
	for _curopt in $(_insertcode_get_cmdname_needargs_shortopt "$_cmdname")
	do
		if [ "$_curopt" = "$_shortopt" ]
		then
			echo "1"
			return
		fi
	done

	for _curopt in $(_insertcode_get_cmdname_noargs_shortopt "$_cmdname")
	do
		if [ "$_curopt" = "$_shortopt" ]
		then
			echo "0"
			return
		fi
	done
	echo "-1"
	return
}

_insertcode_get_subcommands()
{
	local _cmdname="$1"
	if [ -z "$_cmdname" ]
		then
		echo "bashinsert"
		echo "bashstring"
		echo "makepython"
		echo "makeperl"
	elif [ -z "$_cmdname" = "bashinsert" ]
		then
		/bin/true
	elif [ "$_cmdname" = "bashstring" ]
		then
		/bin/true
	elif [ "$_cmdname" = "makepython" ]
		then
		/bin/true
	elif [ "$_cmdname" = "makeperl" ]
		then
		/bin/true
	fi
	return
}

_parse_insertcode_cmdname()
{
	local _i=1
	local _j
	local _cmdname=""
	local _curcmd=""
	local _curopt=""
	local _longoptmatch=""
	local _optmatch=""
	local _optlen
	local _curo
	local _geto
	local _matched
	local _needargs
	local _tempi

	while [ $_i -lt $COMP_CWORD ]
	do
		_matched=0
		_needargs=0
		_curopt=${COMP_WORDS[$_i]}
		_i=`expr $_i \+ 1`
		if [ -z "$_curopt" ]
			then
			continue
		fi

		_longoptmatch=`echo "$_curopt" | grep -Po -e "--(.*)"`
		_optmatch=`echo `
		if [ -n "$_longoptmatch" ]
			then
			_needargs=$(_insertcode_longopt_step "$_cmdname" "$_longoptmatch")
			if [ $_needargs -lt 0 ]
			then
				break
			fi
			if [ $_needargs -gt 0 ]
			then
				_tempi=`expr $_i \+ 1`
				if [ $_tempi -ge $COMP_CWORD ]
				then
				fi
			fi

		elif [ -n "$_optmatch" ]
			then
			_optlen=`echo "$_optmatch" | wc -c | tr -d [:space:]`
			_j=1
			while [ $_j -lt $_optlen ]
			do
				_matched=0
				_geto=`echo "$_curopt" | dd bs=1 count=1 skip=$_j 2>/dev/null`
				for _curo in $(_insertcode_get_cmdname_needargs_shortopt "$_cmdname")
				do
					if [ "$_geto" = "$_curo" ]
						then
						if [ $_i  ]
					fi
				done
				
			done
		fi


	done
	echo "$_cmdname"
	return
}

_insertcode()
{
	COMPREPLY=()
	local _cur=${COMP_WORDS[COMP_CWORD]}
	local _haslongopt=`echo "$_cur" | grep -Po -e '--.*'`
	local _hasopt=`echo "$_cur" | grep -Po -e '-.*'`
	_insertcode_debug "_cur [$_cur]"
	if [ -n "$_haslongopt" ]
		then
	fi


	return
}

complete -F _insertcode insertcode