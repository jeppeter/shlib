
TestSudo()
{
	local _res
	_res=0
	sudo -A ls -l >/dev/null
	_res=$? 
	if [ $_res -ne 0 ]
		then
		cat <<EOFMM>> /dev/stderr
you must use visudo to add line to enable no password call sudo
$USER ALL = NOPASSWD: ALL
EOFMM
		exit 4
	fi
}

RunSudoNoOut()
{
	local _res=0
	local _cmd=""
	while [ $# -gt 0 ]
	do
		if [ -z "$_cmd" ]
			then
			_cmd="\"$1\""
		else
			_cmd="${_cmd} \"$1\""
		fi
		shift
	done
	sudo -A /bin/bash -c "${_cmd}" >/dev/null
	_res=$?
	echo "$_res"
	return
}

RunSudoOutput()
{
	sudo -A $@
	return
}

RunSudoMustSucc()
{
	local _args=$@
	local _res=0
	_res=$(RunSudoNoOut $@)
	Debug "[$*] _res [$_res]"
	if [ $_res -ne 0 ]
		then
		echo "can not run [$*] [$_res]" >/dev/stderr
		exit 4
	fi
}

RunMustSucc()
{
	local _res
	local _cmd=""
	while [ $# -gt 0 ]
	do
		if [ -z "$_cmd" ]
			then
			_cmd="\"$1\""
		else
			_cmd="${_cmd} \"$1\""
		fi
		shift
	done
	/bin/bash -c "$_cmd" >/dev/null 2>/dev/null
	_res=$?
	if [ $_res -ne 0 ]
		then
		ErrorExit 4 "can not run [${_cmd}]"
	fi
}

run_cmd()
{
	_cmd=$1
	if [ -z "$_cmd" ]
	then
		/bin/echo "no cmd specify" >&2
		exit 2
	fi

	if [ $verbose -lt 3 ] ; then
	/bin/echo -e -n "\e[1;37mrunning ($_cmd)\e[0m" >&2
	fi
	if [ $verbose -lt 3 ]; then
		eval "$_cmd" >/dev/null
	else
		eval "$_cmd"
	fi
	_res=$?
	
	if [  $_res -ne 0 ]
	then
		if [ $verbose -lt 3 ] ; then
			/bin/echo -e "\e[31m[FAILED]\e[0m" >&2
		fi
		exit 3
	fi
	if [ $verbose -lt 3 ] ; then
		/bin/echo -e "\e[32m[SUCCESS]\e[0m" >&2
	fi
}
